<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Thomas Tran Portfolio</title>
    <link>https://tranindigo.github.io/</link>
    <description>Recent content on Thomas Tran Portfolio</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 21 Mar 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://tranindigo.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>How to create multi-stage Docker builds</title>
      <link>https://tranindigo.github.io/posts/multistage-docker/</link>
      <pubDate>Thu, 21 Mar 2024 00:00:00 +0000</pubDate>
      <guid>https://tranindigo.github.io/posts/multistage-docker/</guid>
      <description>Multi-stage builds are a feature in Docker that allows you to build Docker images in multiple stages, each with its own base image and set of instructions. This can help you create smaller, more efficient Docker images by separating the build-time dependencies from the runtime dependencies.&#xA;How Multi-Stage Builds Work In a multi-stage Docker build, you specify multiple FROM instructions in your Dockerfile. Each FROM instruction can use a different base image and starts a new stage of the build.</description>
    </item>
    <item>
      <title>How to serve Lambda through an AWS Load Balancer</title>
      <link>https://tranindigo.github.io/posts/lambda-aws-alb/</link>
      <pubDate>Mon, 20 Feb 2023 00:00:00 +0000</pubDate>
      <guid>https://tranindigo.github.io/posts/lambda-aws-alb/</guid>
      <description>You can use a Lambda function to process requests from an Application Load Balancer (ALB). Since Lambda is a short running piece of code, it executes quickly in milliseconds and dies out. As such, each Lambda function must do only a single task and nothing more.&#xA;The support of ALBs for Lambda (and serverless, in general) is to enable your lambda function to be available as a web service. Lambda functions, by default, can&amp;rsquo;t be invoked through the internet.</description>
    </item>
    <item>
      <title>How to modularize Terraform code</title>
      <link>https://tranindigo.github.io/posts/terraform-basics/</link>
      <pubDate>Mon, 23 May 2022 00:00:00 +0000</pubDate>
      <guid>https://tranindigo.github.io/posts/terraform-basics/</guid>
      <description>Terraform modules allow us to group resources together, define input variables to allow different configurations, and define export variables to define how other resources or modules can use. You can think of modules as self-contained packages which can be used in different places. Modules can even be shared across teams in an organization or as open-source exports!&#xA;Let&amp;rsquo;s say you have the following Datadog resource that is not modularized:&#xA;main.tf</description>
    </item>
    <item>
      <title>How to Perform Natural Sort in Elasticsearch</title>
      <link>https://tranindigo.github.io/posts/how-to-natural-sort-elasticsearch/</link>
      <pubDate>Mon, 04 Oct 2021 17:57:00 -0500</pubDate>
      <guid>https://tranindigo.github.io/posts/how-to-natural-sort-elasticsearch/</guid>
      <description>This article serves as a guide on how to perform natural sort in Elasticsearch. So what is natural sort?&#xA;Natural sort order is the ordering of string in alphanumeric characters that is more human-friendly than machine-oriented, alphabetical sort order. For instance, in alphabetical sort, the string &amp;ldquo;q15&amp;rdquo; would be sorted before &amp;ldquo;q2&amp;rdquo; because the &amp;ldquo;1&amp;rdquo; in the first string is sorted as smaller than &amp;ldquo;2&amp;rdquo;. In natural sorting, &amp;ldquo;q2&amp;rdquo; comes before &amp;ldquo;q15&amp;rdquo; because &amp;ldquo;2&amp;rdquo; is treated as smaller than &amp;ldquo;15&amp;rdquo;.</description>
    </item>
    <item>
      <title>Pagination Strategies in Elasticsearch</title>
      <link>https://tranindigo.github.io/posts/deep-pagination/</link>
      <pubDate>Thu, 05 Aug 2021 08:39:00 -0500</pubDate>
      <guid>https://tranindigo.github.io/posts/deep-pagination/</guid>
      <description>In this article, we&amp;rsquo;ll talk about pagination in Elasticsearch (ES) and strategies to perform deep pagination and aggregations of large datasets beyond the default 10,000 document limit that ES imposes for pagination.&#xA;From/Size Pagination If you need to paginate with less than 10,000 documents, then you should use the standard from/size pagination strategy. All you have to do is pass the parameters &amp;ldquo;from&amp;rdquo; and &amp;ldquo;size&amp;rdquo; in your request body into the Search API:</description>
    </item>
    <item>
      <title>How to Set Up Kibana on Ubuntu 18.04</title>
      <link>https://tranindigo.github.io/posts/how-to-set-up-kibana/</link>
      <pubDate>Wed, 14 Jul 2021 09:07:00 -0500</pubDate>
      <guid>https://tranindigo.github.io/posts/how-to-set-up-kibana/</guid>
      <description>This article contains instructions to set up Kibana inside an Ubuntu 18.04 machine. It covers the installation process, networking, and memory allocation.&#xA;Install Kibana The version of Kibana has to match the version of Elasticsearch you installed.&#xA;sudo apt-get update &amp;amp;&amp;amp; sudo apt-get install kibana=7.13.3 Enable network access to port 5601 Kibana is served on port 5601 by default, so we’ll have to open that up.&#xA;sudo ufw allow 5601 sudo ufw enable sudo ufw status Lower allocated memory for Kibana We don’t need that much memory for Kibana at the moment because we’re only using it for monitoring the Elasticsearch cluster.</description>
    </item>
    <item>
      <title>How to Set Up an Elasticsearch Cluster on Ubuntu 18.04</title>
      <link>https://tranindigo.github.io/posts/how-to-set-up-elasticsearch-cluster/</link>
      <pubDate>Tue, 13 Jul 2021 13:57:00 -0500</pubDate>
      <guid>https://tranindigo.github.io/posts/how-to-set-up-elasticsearch-cluster/</guid>
      <description>This article serves as a guide on how to install an Elasticsearch cluster on three Ubuntu 18.04 machines. There are ways to automatically deploy an Elasticsearch cluster using Kubernetes or Docker Cluster, but this guide will serve as a guide on how to manually set up a cluster.&#xA;But first a few terminologies:&#xA;Cluster - a collection of machines/servers that all have Elasticsearch installed, delegate responsibilities amongst themselves, and that all communicate with each other through a collective API.</description>
    </item>
    <item>
      <title>Kubernetes Part 2: Architecture</title>
      <link>https://tranindigo.github.io/posts/kubernetes-pt2-architecture/</link>
      <pubDate>Fri, 02 Apr 2021 10:39:00 -0500</pubDate>
      <guid>https://tranindigo.github.io/posts/kubernetes-pt2-architecture/</guid>
      <description>In this series of articles, we&amp;rsquo;ll take a deep dive into the world of container orchestration and start playing with Kubernetes hands-on. In this article, we&amp;rsquo;ll take a look at the Kubernetes architecture and learn more about how it&amp;rsquo;s laid out.&#xA;Nodes &amp;amp; Pods A node can be a physical machine, a virtual machine, or a virtual machine in the cloud. Inside a node, we have pods, and inside a pods we have containers, and there can be multiple containers in the pod.</description>
    </item>
    <item>
      <title>SQL Server: Clustered and Non-Clustered Indexes</title>
      <link>https://tranindigo.github.io/posts/clustered-indexes/</link>
      <pubDate>Thu, 01 Apr 2021 00:00:00 +0000</pubDate>
      <guid>https://tranindigo.github.io/posts/clustered-indexes/</guid>
      <description>When a table is created and does not have an index, this is called a heap. When new values are added to this table, values are added in no particular order. Using this structure, if we were to search for a particular value, we&amp;rsquo;ll have to search through every single row in the table not only because there is no order to the data, but even if we found a match, we wouldn&amp;rsquo;t know if there were no more searches later on.</description>
    </item>
    <item>
      <title>How to Add a Custom Domain to your Github Pages Website</title>
      <link>https://tranindigo.github.io/posts/github-pages-custom-domain/</link>
      <pubDate>Thu, 25 Mar 2021 00:00:00 +0000</pubDate>
      <guid>https://tranindigo.github.io/posts/github-pages-custom-domain/</guid>
      <description>If you are anything like me, then you&amp;rsquo;ve had to link a custom domain to your Github Pages site. But, if you are me reading this in the future, then you&amp;rsquo;ll know that I do this so rarely that I forget how to do it every time, which always ends up with me spending valuable time researching this for the nth time. Combined with the long-term nature of DNS propagation and the fact that I won&amp;rsquo;t get to see if what I did worked for up to 24 hours, I often get stressed when it doesn&amp;rsquo;t work out the way it should!</description>
    </item>
    <item>
      <title>Kubernetes Part 1: Overview and Features</title>
      <link>https://tranindigo.github.io/posts/kubernetes-pt1-overview-features/</link>
      <pubDate>Wed, 24 Mar 2021 10:39:00 -0500</pubDate>
      <guid>https://tranindigo.github.io/posts/kubernetes-pt1-overview-features/</guid>
      <description>In this series of articles, we&amp;rsquo;ll take a deep dive into the world of container orchestration and start playing with Kubernetes hands-on.&#xA;What is a container? Containers allow developers to package up an application with all of the parts it needs, such as libraries and other dependencies, and ship it all out as one package.&#xA;What is Container Orchestration? If your business runs a large number of complex services on the cloud, containers come in handy - they make it easy to turn apps on and off to meet fluctuating demand.</description>
    </item>
    <item>
      <title>Event-Driven Architecture in Microservices: Sampling Kafka and Docker</title>
      <link>https://tranindigo.github.io/posts/article-event-driven-programming-kafka-docker/</link>
      <pubDate>Tue, 23 Mar 2021 12:45:00 -0500</pubDate>
      <guid>https://tranindigo.github.io/posts/article-event-driven-programming-kafka-docker/</guid>
      <description>In an event-driven microservice architecture, services communicate with each other through event messages. Producers generate business logic and they emit events that will be handled later down in the stream. Consumers receive business logic and they listen to and consume events that producers have emitted. In this article, we will go into detail about this type of architecture, highlight the benefits and downsides, as well as talk about tools that implement this architecture.</description>
    </item>
    <item>
      <title>Anatomy of a Cron Expression</title>
      <link>https://tranindigo.github.io/posts/cron-expressions/</link>
      <pubDate>Sun, 14 Mar 2021 00:00:00 +0000</pubDate>
      <guid>https://tranindigo.github.io/posts/cron-expressions/</guid>
      <description>A cron job is a way to run repetitive tasks on a schedule in Unix-like operating systems. Cron jobs are often used by many apps to run tasks such as sending mass emails, cleaning up data, updating information in a database tables, amongst other important tasks. Almost everything can be automated with cron jobs - well, almost anything!&#xA;In .NET Core, a popular library that can abstract this is called Quartz Scheduler.</description>
    </item>
    <item>
      <title>Stored Procedures: Our Friendnemy in SQL</title>
      <link>https://tranindigo.github.io/posts/stored-procedures-our-friendnemy/</link>
      <pubDate>Thu, 04 Mar 2021 00:00:00 +0000</pubDate>
      <guid>https://tranindigo.github.io/posts/stored-procedures-our-friendnemy/</guid>
      <description>A stored procedure is a SQL script that can be stored on the database server and called many times. Stored procedures have been falling out of favor for many years, in favor of Object-Relational-Mappers (ORM) like Hibernate, Entity Framework, and ActiveRecord. However, there are times when it makes sense to use them as part of your development process, such as working with legacy systems or with multiple systems that rely on the same database.</description>
    </item>
    <item>
      <title>Angular HTTP Interceptors: Modifying Request Headers</title>
      <link>https://tranindigo.github.io/posts/angular-http-interceptors-modifying-request-headers/</link>
      <pubDate>Wed, 17 Feb 2021 00:00:00 +0000</pubDate>
      <guid>https://tranindigo.github.io/posts/angular-http-interceptors-modifying-request-headers/</guid>
      <description>In newer versions of Angular, HTTPInterceptor is an interface which intercepts and handles an HttpRequest or HTTPResponse, which allows you to transform the outgoing request or incoming response. This may be useful when you want to inject a header into your HTTPRequest that contains your authorization token or any other important changes to the request that is relevant to your business logic.&#xA;Some use cases for HTTP Interceptor may be:</description>
    </item>
    <item>
      <title>Memoization in Ruby and Python</title>
      <link>https://tranindigo.github.io/posts/memoization-in-ruby-and-python/</link>
      <pubDate>Fri, 04 Sep 2020 00:00:00 +0000</pubDate>
      <guid>https://tranindigo.github.io/posts/memoization-in-ruby-and-python/</guid>
      <description>Memoization refers to remembering results of method calls based on the method inputs and then returning the remembered result rather than computing the result again. You can think of it as a cache for method results but, unlike a cache, memoization doesn&amp;rsquo;t persist across different sessions and instances.&#xA;The thing that I really like about Ruby is that it has a streamlined way to memoize method calls. In Ruby, the most common pattern for memoizing a call is using the conditional assignment operator, like so:</description>
    </item>
    <item>
      <title>AWS CloudWatch: Monitoring &amp; Alarms</title>
      <link>https://tranindigo.github.io/posts/aws-cloudwatch-monitoring-alarms/</link>
      <pubDate>Mon, 31 Aug 2020 00:00:00 +0000</pubDate>
      <guid>https://tranindigo.github.io/posts/aws-cloudwatch-monitoring-alarms/</guid>
      <description>AWS CloudWatch is a fully-managed service for monitoring AWS services and workloads. For websites, apps, and microservices that are entirely hosted on AWS, this is a great cloud logging solution.&#xA;As a fully-managed service, it is very easy to manage log retention periods, which can be configured on a per-group basis. By default, CloudWatch stores the log data indefinitely. Another advantage of CloudWatch is that it allows you to easily monitor host performance of AWS services.</description>
    </item>
    <item>
      <title>An introduction to AWS KMS: Envelope Encryption</title>
      <link>https://tranindigo.github.io/posts/an-introduction-to-aws-kms/</link>
      <pubDate>Tue, 25 Aug 2020 00:00:00 +0000</pubDate>
      <guid>https://tranindigo.github.io/posts/an-introduction-to-aws-kms/</guid>
      <description>AWS Key Management Service (KMS) is a fully-managed service allows you to create and manage cryptographic keys and control their use across a wide range of AWS services. This is useful because it allows you to centrally manage the encryption keys that control access to your data.&#xA;Features KMS is durable to make sure that your keys are never lost. KMS stores multiple copies of encrypted versions of your keys in systems that are designed for 99.</description>
    </item>
    <item>
      <title>Rails Caching Strategies</title>
      <link>https://tranindigo.github.io/posts/rails-caching-strategies/</link>
      <pubDate>Tue, 25 Aug 2020 00:00:00 +0000</pubDate>
      <guid>https://tranindigo.github.io/posts/rails-caching-strategies/</guid>
      <description>Rails comes packaged with three types of caching techniques: page caching, action caching, and fragment caching. We&amp;rsquo;ll shortly talk about each strategy to better understand them.&#xA;Page caching Page caching allows the generated page to be fulfilled by the webserver without ever having to go through the Rails stack at all. This is very fast, but you can&amp;rsquo;t use it in every situation, such as pages that need authentication, and you&amp;rsquo;ll also have to deal with cache expiration as well.</description>
    </item>
    <item>
      <title>The HTTP/2 Optimization Revolution</title>
      <link>https://tranindigo.github.io/posts/the-http-2-optimization-revolution/</link>
      <pubDate>Thu, 20 Aug 2020 00:00:00 +0000</pubDate>
      <guid>https://tranindigo.github.io/posts/the-http-2-optimization-revolution/</guid>
      <description>HTTP/2 is the second iteration of HTTP (Hypertext Transfer Protocol), which it is also backwards-compatible with. The changes introduced in HTTP/2 affects how developers optimize websites and servers for speed and efficiency. Beyond shrinking and compressing images, minimizing page and script file sizes, you can also switch to HTTP/2.&#xA;Switching to HTTP/2 allows you to benefit from the immediate performance that you can gain from it, and because it is backwards compatible with HTTP/1.</description>
    </item>
    <item>
      <title>AWS Elasticache Caching Strategies</title>
      <link>https://tranindigo.github.io/posts/aws-elasticache-caching-strategies/</link>
      <pubDate>Sun, 19 Jul 2020 00:00:00 +0000</pubDate>
      <guid>https://tranindigo.github.io/posts/aws-elasticache-caching-strategies/</guid>
      <description>Caching strategies dictate how you can populate and access data in the cache. There are two main strategies that AWS Elasticache uses: lazy loading and write-through.&#xA;Lazy Loading Lazy loading, also known as cache-aside caching, is a popular caching strategy. It works like the following:&#xA;When your application needs to read data from a database, it checks the cache first to determine whether the data is available. If the data is available (a cache hit), the cached data is returned.</description>
    </item>
    <item>
      <title>Ruby&#39;s Regexp Class</title>
      <link>https://tranindigo.github.io/posts/rubys-regexp-class/</link>
      <pubDate>Sun, 19 Jul 2020 00:00:00 +0000</pubDate>
      <guid>https://tranindigo.github.io/posts/rubys-regexp-class/</guid>
      <description>A regular expression (regex) is a sequence of characters that define how to search and match patterns in a string. It is commonly used in all modern programming languages like Java, Ruby, and Python.&#xA;Ruby uses the class Regexp to store a regex. Regexp are delimited using the following literals and constructor:&#xA;/.../ %r{...} Regexp::new You can call the match() method to check whether a string contains the pattern. For instance:</description>
    </item>
    <item>
      <title>Basics of Amazon VPC and Subnets</title>
      <link>https://tranindigo.github.io/posts/basics-of-amazon-vpc-and-subnets/</link>
      <pubDate>Sat, 18 Jul 2020 00:00:00 +0000</pubDate>
      <guid>https://tranindigo.github.io/posts/basics-of-amazon-vpc-and-subnets/</guid>
      <description>Amazon Virtual Private Cloud (VPC) is a private data center within the AWS infrastructure. You are able to decide the range of network IPv4 address range when you create the VPC. There is no way to change your VPC&amp;rsquo;s network block after it has been created.&#xA;A VPC consists of many components. A few that will be highlighted in this article are: subnets, Internet Gateway, NAT Gateway, Route Table, and Network Access List.</description>
    </item>
    <item>
      <title>Alif Ba! - Arabic Character Recognition Using a Convolutional Neural Network</title>
      <link>https://tranindigo.github.io/posts/article-alifba/</link>
      <pubDate>Sat, 11 May 2019 13:47:00 -0500</pubDate>
      <guid>https://tranindigo.github.io/posts/article-alifba/</guid>
      <description></description>
    </item>
    <item>
      <title>Automating SCSS to CSS conversion using Gulp</title>
      <link>https://tranindigo.github.io/posts/article-scss-css-gulp/</link>
      <pubDate>Sat, 06 Apr 2019 08:23:00 -0500</pubDate>
      <guid>https://tranindigo.github.io/posts/article-scss-css-gulp/</guid>
      <description></description>
    </item>
    <item>
      <title>Variations of Physical Turing Machines</title>
      <link>https://tranindigo.github.io/posts/article-turing-machine/</link>
      <pubDate>Sat, 06 Apr 2019 08:23:00 -0500</pubDate>
      <guid>https://tranindigo.github.io/posts/article-turing-machine/</guid>
      <description></description>
    </item>
    <item>
      <title>The Ethics of Optimized Healthcare Software Systems</title>
      <link>https://tranindigo.github.io/posts/article-ethics-healthcare/</link>
      <pubDate>Tue, 26 Sep 2017 12:15:00 -0500</pubDate>
      <guid>https://tranindigo.github.io/posts/article-ethics-healthcare/</guid>
      <description></description>
    </item>
    <item>
      <title>Running a Django management command as a Cron job</title>
      <link>https://tranindigo.github.io/posts/article-django-cron/</link>
      <pubDate>Thu, 20 Jul 2017 00:39:00 -0500</pubDate>
      <guid>https://tranindigo.github.io/posts/article-django-cron/</guid>
      <description></description>
    </item>
    <item>
      <title>The Levenshtein Distance as a standardized measure of similarity</title>
      <link>https://tranindigo.github.io/posts/article-levenshtein-distance/</link>
      <pubDate>Wed, 12 Jul 2017 15:21:00 -0500</pubDate>
      <guid>https://tranindigo.github.io/posts/article-levenshtein-distance/</guid>
      <description></description>
    </item>
    <item>
      <title>Demystifying Elasticsearch and Django</title>
      <link>https://tranindigo.github.io/posts/article-django-elasticsearch/</link>
      <pubDate>Fri, 07 Jul 2017 16:25:00 -0500</pubDate>
      <guid>https://tranindigo.github.io/posts/article-django-elasticsearch/</guid>
      <description></description>
    </item>
    <item>
      <title>How to configure nginx as a reverse proxy to a gunicorn socket</title>
      <link>https://tranindigo.github.io/posts/article-nginx-django/</link>
      <pubDate>Sat, 10 Jun 2017 08:43:00 -0500</pubDate>
      <guid>https://tranindigo.github.io/posts/article-nginx-django/</guid>
      <description></description>
    </item>
    <item>
      <title>How to configure a Gunicorn service for a Django app on Ubuntu</title>
      <link>https://tranindigo.github.io/posts/article-django-gunicorn/</link>
      <pubDate>Mon, 05 Jun 2017 12:45:00 -0500</pubDate>
      <guid>https://tranindigo.github.io/posts/article-django-gunicorn/</guid>
      <description></description>
    </item>
  </channel>
</rss>
